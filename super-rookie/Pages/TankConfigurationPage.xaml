<UserControl x:Class="super_rookie.Pages.TankConfigurationPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,20">
            <Button Content="← 뒤로" Command="{Binding DataContext.NavigateBackCommand, RelativeSource={RelativeSource AncestorType=Window}}" Margin="0,0,20,0"/>
            <TextBlock Text="{Binding Name, StringFormat={}{0} 설정, FallbackValue=탱크 설정}" FontSize="24" FontWeight="Bold" VerticalAlignment="Center"/>
        </StackPanel>

        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <!-- Tank Info -->
            <GroupBox Grid.Column="0" Header="탱크 정보" Margin="0,0,10,0">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,5">
                        <TextBlock Text="탱크명:" Width="80" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="120"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,5">
                        <TextBlock Text="용량:" Width="80" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Capacity, UpdateSourceTrigger=PropertyChanged}" Width="120"/>
                        <TextBlock Text="L" VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,5">
                        <TextBlock Text="초기량:" Width="80" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Amount, UpdateSourceTrigger=PropertyChanged}" Width="120"/>
                        <TextBlock Text="L" VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,5">
                        <TextBlock Text="재질:" Width="80" VerticalAlignment="Center"/>
                        <ComboBox SelectedIndex="0" Width="120">
                            <ComboBoxItem Content="스테인리스"/>
                            <ComboBoxItem Content="플라스틱"/>
                            <ComboBoxItem Content="유리"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,5">
                        <TextBlock Text="온도:" Width="80" VerticalAlignment="Center"/>
                        <TextBox Text="25" Width="120"/>
                        <TextBlock Text="°C" VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <!-- Modules Configuration -->
            <GroupBox Grid.Column="1" Header="모듈 구성">
                <TabControl>
                    <!-- Valves Tab -->
                    <TabItem Header="밸브">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                                <Button Content="밸브 추가" Command="{Binding DataContext.AddInletValveToTankCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                                        CommandParameter="{Binding}" Margin="0,0,10,0"/>
                                <Button Content="밸브 제거" Command="{Binding DataContext.RemoveValveCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                                        CommandParameter="{Binding SelectedValve}" Margin="0,0,10,0"/>
                                <Button Content="밸브 설정" Command="{Binding DataContext.ConfigureValveCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                                        CommandParameter="{Binding SelectedValve}"/>
                            </StackPanel>

                            <DataGrid Grid.Row="1" ItemsSource="{Binding Valves}" SelectedItem="{Binding SelectedValve}" AutoGenerateColumns="False" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="이름" Binding="{Binding Name}" Width="*"/>
                                    <DataGridTextColumn Header="타입" Binding="{Binding Direction}" Width="80"/>
                                    <DataGridTextColumn Header="유량" Binding="{Binding FlowRate, UpdateSourceTrigger=PropertyChanged}" Width="80"/>
                                    <DataGridCheckBoxColumn Header="열림" Binding="{Binding IsOpen}" Width="60"/>
                                    <DataGridTemplateColumn Header="DO" Width="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding CommandDo.Name}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>

                    <!-- Sensors Tab -->
                    <TabItem Header="센서">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
                                <Button Content="센서 추가" Command="{Binding DataContext.AddSensorToTankCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                                        CommandParameter="{Binding}" Margin="0,0,10,0"/>
                                <Button Content="센서 제거" Command="{Binding DataContext.RemoveSensorCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                                        CommandParameter="{Binding SelectedSensor}" Margin="0,0,10,0"/>
                                <Button Content="센서 설정" Command="{Binding DataContext.ConfigureSensorCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                                        CommandParameter="{Binding SelectedSensor}"/>
                            </StackPanel>

                            <DataGrid Grid.Row="1" ItemsSource="{Binding Sensors}" SelectedItem="{Binding SelectedSensor}" AutoGenerateColumns="False" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="이름" Binding="{Binding Name}" Width="*"/>
                                    <DataGridTextColumn Header="트리거" Binding="{Binding TriggerAmount, UpdateSourceTrigger=PropertyChanged}" Width="80"/>
                                    <DataGridCheckBoxColumn Header="트리거됨" Binding="{Binding IsTriggered}" Width="80"/>
                                    <DataGridTemplateColumn Header="DI" Width="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding StatusDi.Name}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>

                    <!-- I/O Tab -->
                    <TabItem Header="I/O 매핑">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <GroupBox Grid.Row="0" Header="Digital Outputs" Margin="0,0,0,10">
                                <DataGrid ItemsSource="{Binding Valves}" AutoGenerateColumns="False" CanUserAddRows="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="이름" Binding="{Binding CommandDo.Name}" Width="*"/>
                                        <DataGridCheckBoxColumn Header="상태" Binding="{Binding CommandDo.State}" Width="60"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </GroupBox>

                            <GroupBox Grid.Row="1" Header="Digital Inputs">
                                <DataGrid ItemsSource="{Binding Sensors}" AutoGenerateColumns="False" CanUserAddRows="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="이름" Binding="{Binding StatusDi.Name}" Width="*"/>
                                        <DataGridCheckBoxColumn Header="상태" Binding="{Binding StatusDi.State}" Width="60"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </GroupBox>
                        </Grid>
                    </TabItem>
                </TabControl>
            </GroupBox>
        </Grid>

        <!-- Bottom Actions -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
            <Button Content="저장" Background="#1976D2" Foreground="White" Padding="20,10" Margin="0,0,10,0"/>
            <Button Content="취소"/>
        </StackPanel>
    </Grid>
</UserControl>
